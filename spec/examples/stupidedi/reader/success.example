require "spec_helper"

describe Stupidedi::Reader::Success do
  include QuickCheck::Macro

  def mkreader(value, remainder)
    Stupidedi::Reader::Result.success(value, remainder)
  end

  describe "#value" do
    it "returns the argument given to the constructor" do
      mkreader("a", "b").value.should == "a"
    end
  end

  describe "#remainder" do
    it "returns the argument given to the constructor" do
      mkreader("a", "b").remainder.should == "b"
    end
  end

  describe "#map" do
    it "returns another result" do
      mkreader("a", "b").map { }.should be_a(Stupidedi::Reader::Success)
    end

    it "yields the value"

    it "changes the value"

    it "preserves the remainder"
  end

  property("is splattable") do
    [string, string]
  end.check do |value, remainder|
    a, b = *mkreader(value, remainder)
    a.should == value
    b.should == remainder
  end

end
