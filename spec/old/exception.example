require "spec_helper"

describe "Exception#continue" do
  it "stores a continuation when the exception is raised" do
    exception = begin
                  # ...
                  raise "raze"
                  # ...
                  :value
                rescue
                  $!
                end

    exception.should respond_to(:continuation)
    exception.continuation.should be_a(Continuation)
  end

  it "executes the continuation" do
    begin
      # ...
      raise "raze"
      # ...
      :value
    rescue
      $!.continue
    end.should == :value
  end

  it "handles blocks without a continuation" do
  # lambda do
  #   begin
  #     # ...
  #     raise "raze"
  #     # ...
  #     return :value
  #   rescue
  #     $!.continue
  #   end
  # end.call.should raise_error(Exception::NoContinuationError)
  end

  it "doesn't interfere with normal exception handling" do
    begin
      # ...
      raise "raze"
      # ...
      :value
    rescue
      $!.message
    end.should == "raze"
  end

  it "doesn't interfere with normal exception handling" do
    lambda { raise "raze"; :value }.should raise_error(RuntimeError, "raze")
  end

  it "doesn't interfere with normal exception handling" do
    begin
      # ...
      raise "raze"
    rescue
    end.should be_nil
  end
end
