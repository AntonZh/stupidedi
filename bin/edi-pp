#!/usr/bin/env ruby
require File.expand_path("../../lib/stupidedi", __FILE__)
require "pp"

# Short-lived processes should win some peformance gains here
GC.disable

# This will be auto-enabled when $stdout.tty?, but -C forces color output
require "term/ansicolor" if ARGV.delete("-C")

config = Stupidedi::Config.default
parser = Stupidedi::Builder::StateMachine.build(config)
start  = Time.now

ARGV.each do |path|
  # Reading the entire input at once is slightly faster than streaming
  # from a file handle.
  # content   = File.read(path, :encoding => "ISO-8859-1")
  # parser, r = parser.read(Stupidedi::Reader.build(content))

  File.open(path) do |io|
    parser, result = parser.read(Stupidedi::Reader.build(io))
  end
end

stop = Time.now

parser.zipper.map{|z| pp z.root.node }.
  explain { puts "Non-deterministic state" }

begin
  a = parser.first
  b = parser.last

  a.flatmap{|a| b.flatmap{|b| a.distance(b) }}.
    tap{|d| puts "#{d + 1} segments" }
end

puts "%0.3f seconds" % (stop - start)
