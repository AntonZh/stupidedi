#!/usr/bin/env ruby
$:.unshift(File.expand_path("../../lib", __FILE__))

require "stupidedi"
require "pp"

# This will be auto-enabled when $stdout.tty?, but -C forces color output
require "term/ansicolor" if ARGV.delete("-C")

config = Stupidedi::Config.new do |c|
  c.interchange.register("00401") { Stupidedi::Versions::Interchanges::FourOhOne::InterchangeDef }
  c.interchange.register("00501") { Stupidedi::Versions::Interchanges::FiveOhOne::InterchangeDef }

  c.functional_group.register("004010") { Stupidedi::Versions::FunctionalGroups::FortyTen::FunctionalGroupDef }
  c.functional_group.register("005010") { Stupidedi::Versions::FunctionalGroups::FiftyTen::FunctionalGroupDef }

  c.transaction_set.register("005010", "HN", "277") { Stupidedi::Versions::FunctionalGroups::FiftyTen::TransactionSetDefs::HN277 }
  c.transaction_set.register("005010", "HP", "835") { Stupidedi::Versions::FunctionalGroups::FiftyTen::TransactionSetDefs::HP835 }
  c.transaction_set.register("005010", "HC", "837") { Stupidedi::Versions::FunctionalGroups::FiftyTen::TransactionSetDefs::HC837 }
  c.transaction_set.register("005010", "FA", "999") { Stupidedi::Versions::FunctionalGroups::FiftyTen::TransactionSetDefs::FA999 }

  c.transaction_set.register("005010X214", "HN", "277", Stupidedi::Guides::FiftyTen::X214::HN277)
  c.transaction_set.register("005010X221", "HP", "835", Stupidedi::Guides::FiftyTen::X221::HP835)
  c.transaction_set.register("005010X222", "HC", "837", Stupidedi::Guides::FiftyTen::X222::HC837P)
  c.transaction_set.register("005010X231", "FA", "999", Stupidedi::Guides::FiftyTen::X231::FA999)

  c.transaction_set.register("005010X221A1", "HP", "835", Stupidedi::Guides::FiftyTen::X221A1::HP835)
  c.transaction_set.register("004010X098A1", "HC", "837", Stupidedi::Guides::FiftyTen::X222A1::HC837P)
  c.transaction_set.register("005010X222A1", "HC", "837", Stupidedi::Guides::FiftyTen::X222A1::HC837P)
  c.transaction_set.register("005010X231A1", "FA", "997", Stupidedi::Guides::FiftyTen::X231A1::FA999)
end

parser = Stupidedi::Builder::StateMachine.build(config)
start  = Time.now

ARGV.each do |path|
  File.open(path) do |io|
    parser, result = parser.read(Stupidedi::Reader.build(io))
    pp result
  end
end

stop = Time.now

parser.zipper.map{|z| pp z.root.node }.
  explain { puts "Non-deterministic state" }

begin
  count  = 0
  cursor = parser.first

  while cursor.defined?
    count += 1
    cursor = cursor.flatmap{|c| c.next }
  end

  puts "#{count} segments"
end

begin
  a = parser.first
  b = parser.last

  a.flatmap{|a| b.flatmap{|b| a.distance(b) }}.
    tap{|d| puts "#{d + 1} segments" }
end

puts "%0.3f seconds" % (stop - start)
