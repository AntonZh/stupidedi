module Stupidedi
  module Guides
    module FiftyTen
      module X222

        b = GuideBuilder
        d = Schema
        r = SegmentReqs
        e = ElementReqs
        s = Dictionaries::FunctionalGroups::FiftyTen::SegmentDefs
        t = Dictionaries::FunctionalGroups::FiftyTen::TransactionSetDefs

        HP835 = b.build(t::HP835,
          d::TableDef.header("Table 1 - Header",
            b::Segment(100, s::ST, "Transaction Set Header",
              r::Required, d::RepeatCount.bounded(1),
              b::Element(e::Required,    "Transaction Set Identifier Code", b::Values("835")),
              b::Element(e::Required,    "Transaction Set Control Number"),
              b::Element(e::NotUsed,     "Implementation Guide Version Name")),
            b::Segment(200, s::BPR, "Financial Information",
              r::Required, d::RepeatCount.bounded(1),
              xxx),
            b::Segment(400, s::TRN, "Reassociation Trace Number",
              r::Required, d::RepeatCount.bounded(1),
              xxx),
            b::Segment(500, s::CUR, "Foreign Currency Information",
              r::Situational, d::RepeatCount.bounded(1),
              b::Element(e::Required,    "Entity Identifier Code", b::Values("PR")),
              b::Element(e::Required,    "Currency Code"),
              b::Element(e::NotUsed,     "Exchange Rate"),
              b::Element(e::NotUsed,     "Entity Identifier Code"),
              b::Element(e::NotUsed,     "Currency Code"),
              b::Element(e::NotUsed,     "Currency Market/Exchange Code"),
              b::Element(e::NotUsed,     "Date/Time Qualifier"),
              b::Element(e::NotUsed,     "Date"),
              b::Element(e::NotUsed,     "Time"),
              b::Element(e::NotUsed,     "Date/Time Qualifier"),
              b::Element(e::NotUsed,     "Date"),
              b::Element(e::NotUsed,     "Time"),
              b::Element(e::NotUsed,     "Date/Time Qualifier"),
              b::Element(e::NotUsed,     "Date"),
              b::Element(e::NotUsed,     "Time"),
              b::Element(e::NotUsed,     "Date/Time Qualifier"),
              b::Element(e::NotUsed,     "Date"),
              b::Element(e::NotUsed,     "Time"),
              b::Element(e::NotUsed,     "Date/Time Qualifier"),
              b::Element(e::NotUsed,     "Date"),
              b::Element(e::NotUsed,     "Time")),
            b::Segment(600, s::REF, "Receiver Identification",
              r::Situational, d::RepeatCount.bounded(1),
              b::Element(e::Required,    "Reference Identification Qualifier", b::Values("EV")),
              b::Element(e::Required,    "Receiver Identifier"),
              b::Element(e::NotUsed,     "Description"),
              b::Element(e::NotUsed,     "REFERENCE IDENTIFIER")),
            b::Segment(600, s::REF, "Version Identification",
              r::Situational, d::RepeatCount.bounded(1),
              b::Element(e::Required,    "Reference Identification Qualifier", b::Values("F2")),
              b::Element(e::Required,    "Version Identification Code"),
              b::Element(e::NotUsed,     "Description"),
              b::Element(e::NotUsed,     "REFERENCE IDENTIFIER")),

            d::LoopDef.build("1000A PAYER IDENTIFICATION",
              d::RepeatCount.bounded(1),
              b::Segment( 800, s::N1, "Payer Identification",
                r::Required, d::RepeatCount.bounded(1),
                xxx),
              b::Segment(1000, s::N3, "Payer Address",
                r::Required, d::RepeatCount.bounded(1),
                b::Element(e::Required,    "Payer Address Line"),
                b::Element(e::Situational, "Payer Address Line")),
              b::Segment(1100, s::N4, "Payer City, State, ZIP Code",
                r::Required, d::RepeatCount.bounded(1),
                b::Element(e::Required,    "Payer City Name"),
                b::Element(e::Situational, "Payer State or Province Code"),
                b::Element(e::Situational, "Payer Postal Zone or ZIP Code"),
                b::Element(e::Situational, "Country Code"),
                b::Element(e::NotUsed,     "Location Qualifier"),
                b::Element(e::NotUsed,     "Location Identifier"),
                b::Element(e::Situational, "Country Subdivision Code")),
              b::Segment(1200, s::REF, "Additional Payer Identification",
                r::Situational, d::RepeatCount.bounded(4),
                b::Element(e::Required,    "Reference Identification Qualifier", b::Values("2U", "EO", "HI", "NF")),
                b::Element(e::Required,    "Additional Payer Identifier"),
                b::Element(e::NotUsed,     "Description"),
                b::Element(e::NotUsed,     "REFERENCE IDENTIFIER")),
              b::Segment(1300, s::PER, "Payer Business Contact Information",
                r::Situational, d::RepeatCount.bounded(1),
                b::Element(e::Required,    "Contact Function Code", b::Values("CX")),
                b::Element(e::Situational, "Payer Contact Name"),
                b::Element(e::Situational, "Communication Number Qualifier", b::Values("EM", "FX", "TE")),
                b::Element(e::Situational, "Communication Number"),
                b::Element(e::Situational, "Communication Number Qualifier", b::Values("EM", "EX", "FX", "TE")),
                b::Element(e::Situational, "Communication Number"),
                b::Element(e::Situational, "Communication Number Qualifier", b::Values("EX")),
                b::Element(e::Situational, "Communication Number"),
                b::Element(e::NotUsed,     "Contact Inquiry Reference")),
              b::Segment(1300, s::PER, "Payer Technical Contact Information",
                r::Required, d::RepeatCount.unbounded,
                b::Element(e::Required,    "Contact Function Code", b::Values("BL")),
                b::Element(e::Situational, "Payer Contact Name"),
                b::Element(e::Situational, "Communication Number Qualifier", b::Values("EM", "TE", "UR")),
                b::Element(e::Situational, "Communication Number"),
                b::Element(e::Situational, "Communication Number Qualifier", b::Values("EM", "EX", "FX", "TE", "UR")),
                b::Element(e::Situational, "Communication Number"),
                b::Element(e::Situational, "Communication Number Qualifier", b::Values("EM", "EX", "FX", "UR")),
                b::Element(e::Situational, "Communication Number"),
                b::Element(e::NotUsed,     "Contact Inquiry Reference")),
              b::Segment(1300, s::PER, "Payer Web Site",
                r::Situational, d::RepeatCount.bounded(1),
                b::Element(e::Required,    "Contact Function Code", b::Values("IC")),
                b::Element(e::NotUsed,     "Payer Contact Name"),
                b::Element(e::Required,    "Communication Number Qualifier", b::Values("UR")),
                b::Element(e::Required,    "Communication Number"),
                b::Element(e::NotUsed,     "Communication Number Qualifier"),
                b::Element(e::NotUsed,     "Communication Number"),
                b::Element(e::NotUsed,     "Communication Number Qualifier"),
                b::Element(e::NotUsed,     "Communication Number"),
                b::Element(e::NotUsed,     "Contact Inquiry Reference"))),

            d::LoopDef.build("1000B PAYEE IDENTIFICATION",
              d::RepeatCount.bounded(1),
              b::Segment( 800, s::N1, "Payee Identification",
                r::Required, d::RepeatCount.bounded(1),
                xxx),
              b::Segment(1000, s::N3, "Payee Address",
                r::Situational, d::RepeatCount.bounded,
                b::Element(e::Required,    "Payee Address Line"),
                b::Element(e::Situational, "Payee Address Line")),
              b::Segment(1100, s::N4, "Payee City, State, ZIP Code",
                r::Required, d::RepeatCount.bounded(1),
                b::Element(e::Required,    "Payee City Name"),
                b::Element(e::Situational, "Payee State or Province Code"),
                b::Element(e::Situational, "Payee Postal Zone or ZIP Code"),
                b::Element(e::Situational, "Country Code"),
                b::Element(e::NotUsed,     "Location Qualifier"),
                b::Element(e::NotUsed,     "Location Identifier"),
                b::Element(e::Situational, "Country Subdivision Code")),
              b::Segment(1200, s::REF, "Payee Additional Identification",
                r::Situational, d::RepeatCount.unbounded,
                b::Element(e::Required,    "Reference Identification Qualifier", b::Values("0B", "D3", "PQ", "TJ")),
                b::Element(e::Required,    "Additional Payee Identifier"),
                b::Element(e::NotUsed,     "Description"),
                b::Element(e::NotUsed,     "REFERENCE IDENTIFIER")),
              b::Segment(1400, s::RDM, "Remittance Delivery Method",
                r::Situational, d::RepeatCount.bounded(1),
                xxx))),

          d::TableDef.detail("Table 2 - Detail",
            d::LoopDef.build("2000 HEADER NUMBER",
              d::RepeatCount.unbounded,
              b::Segment(30, s::LX, "Header Number",
                r::Situational, d::RepeatCount.bounded(1),
                xxx),
              b::Segment(50, s::TS3, "Provider Summary Information",
                r::Situational, s::RepeatCount.bounded(1),
                xxx),
              b::Segment(70, s::TS2, "Provider Supplemental Summary Information",
                r::Situational, s::RepeatCount.bounded(1),
                xxx),

              d::LoopDef.build("2100 CLAIM PAYMENT INFORMATION",
                d::RepeatCount.unbounded,
                b::Segment( 100, s::CLP, "Claim Payment Information",
                  r::Required, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 200, s::CAS, "Claim Adjustment",
                  r::Situational, s::RepeatCount.bounded(99),
                  xxx),
                b::Segment( 300, s::NM1, "Patient Name",
                  r::Required, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 300, s::NM1, "Insured Name",
                  r::Situational, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 300, s::NM1, "Corrected Patient/Insured Name",
                  r::Situational, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 300, s::NM1, "Service Provider Name",
                  r::Situational, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 300, s::NM1, "Crossover Carrier Name",
                  r::Situational, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 300, s::NM1, "Corrected Priority Payer Name",
                  r::Situational, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 300, s::NM1, "Other Subscriber Name",
                  r::Situational, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 330, s::MIA, "Inpatient Adjudication Information",
                  r::Situational, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 350, s::MOA, "Outpatient Adjudication Information",
                  r::Situational, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 400, s::REF, "Other Claim Related Identification",
                  r::Situational, s::RepeatCount.bounded(5),
                  xxx),
                b::Segment( 400, s::REF, "Rendering Provider Identification",
                  r::Situational, s::RepeatCount.bounded(10),
                  xxx),
                b::Segment( 500, s::DTM, "Statement From or To Date",
                  r::Situational, s::RepeatCount.bounded(2),
                  xxx),
                b::Segment( 500, s::DTM, "Coverage Expiration Date",
                  r::Situational, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 500, s::DTM, "Claim Received Date",
                  r::Situational, s::RepeatCount.bounded(1),
                  xxx),
                b::Segment( 600, s::PER, "Claim Contact Information",
                  r::Situational, s::RepeatCount.bounded(2),
                  xxx),
                b::Segment( 620, s::AMT, "Claim Supplemental Information",
                  r::Situational, s::RepeatCount.bounded(13),
                  xxx),
                b::Segment( 640, s::QTY, "Claim Supplemental Information Quantity",
                  r::Situational, s::RepeatCount.bounded(14),
                  xxx),

                d::LoopDef.build("2110 SERVICE PAYMENT INFORMATION",
                  s::RepeatCount.bounded(999),
                  b::Segment( 700, s::SVC, "Service Payment Information",
                    r::Situational, s::RepeatCount.bounded(1),
                    xxx),
                  b::Segment( 800, s::DTM, "Service Date",
                    r::Situational, s::RepeatCount.bounded(2),
                    xxx),
                  b::Segment( 900, s::CAS, "Service Adjustment",
                    r::Situational, s::RepeatCount.bounded(99),
                    xxx),
                  b::Segment(1000, s::REF, "Service Identification",
                    r::Situational, s::RepeatCount.bounded(8),
                    xxx),
                  b::Segment(1000, s::REF, "Line Item Control Number",
                    r::Situational, s::RepeatCount.bounded(1),
                    xxx),
                  b::Segment(1000, s::REF, "Rendering Provider Information",
                    r::Situational, s::RepeatCount.bounded(10),
                    xxx),
                  b::Segment(1000, s::REF, "HealthCare Policy Identification",
                    r::Situational, s::RepeatCount.bounded(5),
                    xxx),
                  b::Segment(1100, s::AMT, "Service Supplemental Amount",
                    r::Situational, s::RepeatCount.bounded(9),
                    xxx),
                  b::Segment(1200, s::QTY, "Service Supplemental Quantity",
                    r::Situational, s::RepeatCount.bounded(6),
                    xxx),
                  b::Segment(1300, s::LQ, "Health Care Remark Codes",
                    r::Situational, s::RepeatCount.bounded(99),
                    xxx))))),

          d::TableDef.detail("Table 3 - Summary",
            b::Segment(100, s::PLB, "Provider Adjustment",
              r::Situational, s::RepeatCount.unbounded,
              xxx),
            b::Segment(200, s::SE, "Transaction Set Trailer",
              r::Required, s::RepeatCount.bounded(1),
              xxx)))

      end
    end
  end
end
